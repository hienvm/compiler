# Dùng để giảm kích thước dfa và để dễ dàng thêm các từ khóa mới
# Chỉ hỗ trợ các keyword thỏa mãn pattern của token chứa label <identifier>, nếu không thì phải cho vào dfa
# Ngoài ra vẫn cần cho true và false vào dfa
KEYWORDS
boolean break continue else for float if int return void while

# tên trạng thái có thể đặt bất kỳ, miễn không chứa khoảng trắng
START_STATE
0

# Trạng thái dùng để lược bỏ các từ tố không cần thiết
# Khi dfa nhảy tới discard_state thì xâu hiện tại sẽ bị lược bỏ và quay về start_state
DISCARD_STATE
-1

ACCEPTING_STATES
2 operator <=
3 operator <>
5 operator =
7 operator >=

# Dùng để nhận biết giới hạn của các từ tố vô hạn hoặc các từ tố mở rộng(phân biệt < và <=)...
# Nếu nhìn trước MỘT ký tự mà đi đến những trạng thái này thì accept toàn bộ xâu trước đó
LOOKAHEAD_ACCEPTING_STATES
4 operator <
8 operator >
11 identifier
19 literal e_notation_float
24 literal float
27 literal int

# Macros cho các ký tự đặc biệt: blank tab newline
# Phân nhóm các ký tự để giảm số lượng cạnh của dfa
GROUPS
ws blank tab newline
letter _ a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
digit 0 1 2 3 4 5 6 7 8 9

# Phải định nghĩa hết các state đặc biệt trước khi định nghĩa bảng transitions
# other là phân nhóm đặc biệt, khớp với mọi input và có mức ưu tiên thấp nhất (input -> group -> other)
TRANSITIONS
0 (< 1) (= 5) (> 6) (letter 10) (digit 13) (ws -1)
1 (= 2) (> 3) (other 4)
6 (= 7) (other 8)
10 (letter 10) (digit 10) (other 11)
13 (digit 13) (. 14) (E 16) (other 27)
14 (digit 15)
15 (digit 15) (E 16) (other 24)
16 (+ 17) (- 17) (digit 18)
17 (digit 18)
18 (digit 18) (other 19)